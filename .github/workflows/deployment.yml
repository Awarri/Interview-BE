# name: Build and Deploy to Google Cloud Run

# on:
#   push:
#     branches:
#       - main
#       - dev
#       - QA
#       - preprod

# jobs:
#   setup-build-deploy:
#     name: Setup, Build, and Deploy
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v2

#     - name: Set up Cloud SDK
#       uses: google-github-actions/setup-gcloud@v0.2.0
#       with:
#         project_id: ${{ secrets.GCP_PROJECT_ID }}
#         service_account_key: ${{ secrets.GCP_SA_KEY }}
#         export_default_credentials: true

#     - name: Determine suffix, tag, and service name
#       run: |
#         if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
#           suffix=""
#           service="backend"
#           mongo_uri="${{ secrets.MONGO_URI }}"
#           ENVIRONMENT="${{PROD_SERVE}}"
#         elif [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
#           suffix="-dev"
#           service="backend-dev"
#           mongo_uri="${{ secrets.DEV_MONGO_URI }}"
#           ENVIRONMENT="${{DEV_SERVE}}"
#         elif [[ "${{ github.ref }}" == "refs/heads/QA" ]]; then
#           suffix="-qa"
#           service="backend-qa"
#           mongo_uri="${{ secrets.QA_MONGO_URI }}"
#           ENVIRONMENT="${{QA_SERVE}}"
#         else
#           suffix="-preprod"
#           service="backend-preprod"
#           mongo_uri="${{ secrets.MONGO_URI_PREPROD }}"
#           ENVIRONMENT="${{QA_SERVE}}"
#         fi
#         tag="gcr.io/${{ secrets.GCP_PROJECT_ID }}/${service}:${GITHUB_SHA}"
#         echo "Service name: $service"
#         echo "Tag: $tag"
#         echo "suffix=${suffix}" >> $GITHUB_ENV
#         echo "service=${service}" >> $GITHUB_ENV
#         echo "tag=${tag}" >> $GITHUB_ENV
#         echo "mongo_uri=${mongo_uri}" >> $GITHUB_ENV

#     - name: Build and push Docker image
#       run: |
#         gcloud builds submit --tag ${{ env.tag }} .

#     - name: Deploy to Cloud Run
#       run: |
#         gcloud run deploy ${{ env.service }} \
#           --image ${{ env.tag }} \
#           --platform managed \
#           --region us-central1 \
#           --allow-unauthenticated \
#           --set-env-vars CLOUDINARY_URL=${{ secrets.CLOUDINARY_URL }},FRONTEND_URL=${{ secrets.FRONTEND_URL }},JWT_SECRET=${{ secrets.JWT_SECRET }},MONGO_URI=${{ env.mongo_uri }},NODE_ENV=${{ env.service }}
#           # --project ${{ secrets.GCP_PROJECT_ID }}


####


name: Build and Deploy to Google Cloud Run

on:
  push:
    branches:
      - main
      - dev
      - QA
      - preprod

jobs:
  setup-build-deploy:
    name: Setup, Build, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Determine suffix, tag, and service name
      run: |
        if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          suffix=""
          service="backend"
          mongo_uri="${{ secrets.MONGO_URI }}"
          environment="${{ secrets.PROD_SERVE }}"
        elif [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
          suffix="-dev"
          service="backend-dev"
          mongo_uri="${{ secrets.DEV_MONGO_URI }}"
          environment="${{ secrets.DEV_SERVE }}"
        elif [[ "${{ github.ref }}" == "refs/heads/QA" ]]; then
          suffix="-qa"
          service="backend-qa"
          mongo_uri="${{ secrets.QA_MONGO_URI }}"
          environment="${{ secrets.QA_SERVE }}"
        else
          suffix="-preprod"
          service="backend-preprod"
          mongo_uri="${{ secrets.MONGO_URI_PREPROD }}"
          environment="${{ secrets.QA_SERVE }}"
        fi
        tag="gcr.io/${{ secrets.GCP_PROJECT_ID }}/${service}:${GITHUB_SHA}"
        echo "Service name: $service"
        echo "Tag: $tag"
        echo "suffix=${suffix}" >> $GITHUB_ENV
        echo "service=${service}" >> $GITHUB_ENV
        echo "tag=${tag}" >> $GITHUB_ENV
        echo "mongo_uri=${mongo_uri}" >> $GITHUB_ENV
        echo "environment=${environment}" >> $GITHUB_ENV

    - name: Build and push Docker image
      run: |
        gcloud builds submit --tag ${{ env.tag }} .

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy ${{ env.service }} \
          --image ${{ env.tag }} \
          --platform managed \
          --region us-central1 \
          --allow-unauthenticated \
          --set-env-vars CLOUDINARY_URL=${{ secrets.CLOUDINARY_URL }},FRONTEND_URL=${{ secrets.FRONTEND_URL }},JWT_SECRET=${{ secrets.JWT_SECRET }},MONGO_URI=${{ env.mongo_uri }},NODE_ENV=${{ env.service }},ENVIRONMENT=${{ env.environment }}




































# name: Deploy to Google Cloud Run

# on:
#   push:
#     branches:
#       - main  # This workflow triggers on pushes to the main branch

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#       # Step 1: Check out the repository.
#       - name: Checkout code
#         uses: actions/checkout@v2

#       # Step 2: Set up Google Cloud SDK
#       - name: Set up Google Cloud
#         uses: google-github-actions/setup-gcloud@v0.2.0
#         with:
#           project_id: ${{ secrets.GCP_PROJECT_ID }}
#           service_account_key: ${{ secrets.GCP_SA_KEY }}
#           export_default_credentials: true

#       # Step 3: Build and push Docker image
#       - name: Build and push Docker image
#         run: |
#           gcloud auth configure-docker
#           docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/backend:$GITHUB_SHA .
#           docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/backend:$GITHUB_SHA

#       # Step 4: Deploy to Google Cloud Run
#       - name: Deploy to Cloud Run
#         run: |
#           gcloud run deploy backend \
#             --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/backend:$GITHUB_SHA \
#             --platform managed \
#             --region us-central1 \
#             --allow-unauthenticated \
#             --set-env-vars CLOUDINARY_URL="${{ secrets.CLOUDINARY_URL }}",EMAIL_HOST="${{ secrets.EMAIL_HOST }}",EMAIL_PASS="${{ secrets.EMAIL_PASS }}",EMAIL_USER="${{ secrets.EMAIL_USER }}",FRONTEND_URL="${{ secrets.FRONTEND_URL }}",JWT_SECRET="${{ secrets.JWT_SECRET }}",MONGO_URI="${{ secrets.MONGO_URI }}",NODE_ENV="${{ secrets.NODE_ENV }}",OLD_FRONTEND_URL="${{ secrets.OLD_FRONTEND_URL }}",PROJECT_ID="${{ secrets.PROJECT_ID }}",BUCKET_NAME="${{ secrets.BUCKET_NAME }}",ENVIRONMENT="${{ secrets.ENVIRONMENT }}" \
#             --project ${{ secrets.GCP_PROJECT_ID }}










# name: Build and Deploy to Google Cloud Run

# on:
#   push:
#     branches:
#       - dev
#       - main

# jobs:
#   setup-build-deploy:
#     name: Setup, Build, and Deploy
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v2

#     - name: Set up Cloud SDK
#       uses: google-github-actions/setup-gcloud@v0
#       with:
#         project_id: ${{ secrets.GCP_PROJECT_ID }}
#         service_account_key: ${{ secrets.GCP_SA_KEY }}
#         export_default_credentials: true

#     - name: Load environment variables
#       run: |
#         echo "VITE_APP_CLOUDINARY_API_KEY=${{ secrets.VITE_APP_CLOUDINARY_API_KEY }}" >> $GITHUB_ENV
#         echo "VITE_APP_CLOUDINARY_API_SECRET=${{ secrets.VITE_APP_CLOUDINARY_API_SECRET }}" >> $GITHUB_ENV
#         echo "VITE_APP_CLOUDINARY_CLOUD_NAME=${{ secrets.VITE_APP_CLOUDINARY_CLOUD_NAME }}" >> $GITHUB_ENV
#         echo "VITE_APP_CLOUDINARY_API_BASE_URL=${{ secrets.VITE_APP_CLOUDINARY_API_BASE_URL }}" >> $GITHUB_ENV
#         echo "VITE_APP_CLOUDINARY_UPLOAD_PRESET=${{ secrets.VITE_APP_CLOUDINARY_UPLOAD_PRESET }}" >> $GITHUB_ENV
#         echo "VITE_APP_BASE_URL=${{ secrets.VITE_APP_BASE_URL }}" >> $GITHUB_ENV
#         echo "VITE_APP_SECRET_KEY=${{ secrets.VITE_APP_SECRET_KEY }}" >> $GITHUB_ENV
#         echo "VITE_APP_TOKEN=${{ secrets.VITE_APP_TOKEN }}" >> $GITHUB_ENV
#         echo "VITE_APP_REFRESH_TOKEN=${{ secrets.VITE_APP_REFRESH_TOKEN }}" >> $GITHUB_ENV
#         echo "VITE_APP_USER_INFO=${{ secrets.VITE_APP_USER_INFO }}" >> $GITHUB_ENV
        
#     - name: Determine suffix, tag, and service name
#       run: |
#         echo "Branch Ref: ${{ github.ref }}"
#         if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
#           suffix=""
#           service="langeasy-frontend"
#         else
#           suffix="-qa"
#           service="langeasy-frontend-qa"
#         fi
#         tag="gcr.io/${{ secrets.GCP_PROJECT_ID }}/${service}:${GITHUB_SHA}"
#         echo "Service name: $service"
#         echo "Tag: $tag"
#         echo "suffix=${suffix}" >> $GITHUB_ENV
#         echo "service=${service}" >> $GITHUB_ENV
#         echo "tag=${tag}" >> $GITHUB_ENV

#     - name: Build and push Docker image
#       run: |
#         gcloud builds submit --tag ${{ env.tag }} .

#     - name: Deploy to Cloud Run
#       run: |
#         gcloud run deploy ${{ env.service }} \
#           --image ${{ env.tag }} \
#           --platform managed \
#           --region us-central1 \
#           --allow-unauthenticated \
#           --update-env-vars VITE_APP_CLOUDINARY_API_KEY=${{ secrets.VITE_APP_CLOUDINARY_API_KEY }},VITE_APP_CLOUDINARY_API_SECRET=${{ secrets.VITE_APP_CLOUDINARY_API_SECRET }},VITE_APP_CLOUDINARY_CLOUD_NAME=${{ secrets.VITE_APP_CLOUDINARY_CLOUD_NAME }},VITE_APP_CLOUDINARY_API_BASE_URL=${{ secrets.VITE_APP_CLOUDINARY_API_BASE_URL }},VITE_APP_CLOUDINARY_UPLOAD_PRESET=${{ secrets.VITE_APP_CLOUDINARY_UPLOAD_PRESET }},VITE_APP_BASE_URL=${{ secrets.VITE_APP_BASE_URL }},VITE_APP_SECRET_KEY=${{ secrets.VITE_APP_SECRET_KEY }},VITE_APP_TOKEN=${{ secrets.VITE_APP_TOKEN }},VITE_APP_REFRESH_TOKEN=${{ secrets.VITE_APP_REFRESH_TOKEN }},VITE_APP_USER_INFO=${{ secrets.VITE_APP_USER_INFO }}



